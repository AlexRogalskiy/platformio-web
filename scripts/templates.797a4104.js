angular.module('siteApp').run(['$templateCache', function($templateCache) {
  'use strict';

  $templateCache.put('views/404.html',
    "<div class=\"jumbotron text-center\"><h1 view-title>Oops... <small><font color=red>404 Not Found</font></small></h1><h2>We couldn't find what you were looking for.</h2><p>Unfortunately the page you were looking for could not be found. It may be temporarily unavailable, moved or no longer exist.</p><p>Check the URL you entered for any mistakes and try again. Alternatively, search for whatever is missing or take a look around the rest of our site.</p><p><a href=\"/\" class=\"btn btn-primary btn-lg\"><i class=\"fa fa-home fa-lg\"></i> Take Me Home</a></p></div>"
  );


  $templateCache.put('views/boards.html',
    "<view-title>{{ vm.vendors[vm.activeVendor].title }} Â· Embedded Boards</view-title><meta name=description content=\"Pre-configured settings for {{ vm.vendors[vm.activeVendor].title }}\" view-head><meta name=keywords content=\"arduino, microduino, raspduino, msp430, tiva, arm, launchpad\" view-head><div class=jumbotron><div class=container><h1><i class=\"fa fa-gamepad\"></i> Embedded Boards</h1><p><b>PlatformIO</b> has pre-configured settings for most popular <i>Embedded Boards</i>.</p><p>You have no need to specify in <a href=http://docs.platformio.org/en/latest/projectconf.html>Project Configuration File</a> type or frequency of <i>MCU</i>, upload protocol or etc. Please use <span class=\"label label-default\">board</span> option.</p></div></div><div class=container><tabset><tab active=vm.vendors.arduino.active><tab-heading><a href=#!/boards/arduino ng-click=\"vm.changeVendor('arduino')\"><h4>Arduino</h4></a></tab-heading><table class=\"table table-striped\"><thead><tr><th>Type <span class=\"label label-default\">board</span></th><th>Name</th><th>Microcontroller</th><th>Frequency</th><th>Flash</th><th>RAM<tbody><tr><td><span class=\"label label-default\">diecimilaatmega168</span></td><td><a href=http://arduino.cc/en/Main/ArduinoBoardDiecimila target=_blank>Arduino Diecimila or Duemilanove (ATmega168)</a></td><td>ATmega168</td><td>16 MHz</td><td>16 Kb</td><td>1 Kb<tr><td><span class=\"label label-default\">diecimilaatmega328</span></td><td><a href=http://arduino.cc/en/Main/ArduinoBoardDiecimila target=_blank>Arduino Diecimila or Duemilanove (ATmega328)</a></td><td>ATmega328</td><td>16 MHz</td><td>32 Kb</td><td>2 Kb<tr><td><span class=\"label label-default\">fio</span></td><td><a href=http://arduino.cc/en/Main/ArduinoBoardFio target=_blank>Arduino Fio</a></td><td>ATmega328P</td><td>8 MHz</td><td>32 Kb</td><td>2 Kb<tr><td><span class=\"label label-default\">leonardo</span></td><td><a href=http://arduino.cc/en/Main/arduinoBoardLeonardo target=_blank>Arduino Leonardo</a></td><td>ATmega32u4</td><td>16 MHz</td><td>32 Kb</td><td>2.5 Kb<tr><td><span class=\"label label-default\">LilyPadUSB</span></td><td><a href=http://arduino.cc/en/Main/ArduinoBoardLilyPadUSB target=_blank>Arduino LilyPad USB</a></td><td>ATmega32u4</td><td>8 MHz</td><td>32 Kb</td><td>2.5 Kb<tr><td><span class=\"label label-default\">lilypadatmega168</span></td><td><a href=http://arduino.cc/en/Main/ArduinoBoardLilyPad target=_blank>Arduino LilyPad (ATmega168)</a></td><td>ATmega168</td><td>8 MHz</td><td>16 Kb</td><td>1 Kb<tr><td><span class=\"label label-default\">lilypadatmega328</span></td><td><a href=http://arduino.cc/en/Main/ArduinoBoardLilyPad target=_blank>Arduino LilyPad (ATmega328)</a></td><td>ATmega328P</td><td>8 MHz</td><td>32 Kb</td><td>2 Kb<tr><td><span class=\"label label-default\">megaatmega1280</span></td><td><a href=http://arduino.cc/en/Main/arduinoBoardMega target=_blank>Arduino Mega (ATmega1280)</a></td><td>ATmega1280</td><td>16 MHz</td><td>128 Kb</td><td>8 Kb<tr><td><span class=\"label label-default\">megaatmega2560</span></td><td><a href=http://arduino.cc/en/Main/arduinoBoardMega2560 target=_blank>Arduino Mega (ATmega2560)</a></td><td>ATmega2560</td><td>16 MHz</td><td>256 Kb</td><td>8 Kb<tr><td><span class=\"label label-default\">megaADK</span></td><td><a href=http://arduino.cc/en/Main/ArduinoBoardMegaADK target=_blank>Arduino Mega ADK</a></td><td>ATmega2560</td><td>16 MHz</td><td>256 Kb</td><td>8 Kb<tr><td><span class=\"label label-default\">micro</span></td><td><a href=http://arduino.cc/en/Main/ArduinoBoardMicro target=_blank>Arduino Micro</a></td><td>ATmega32u4</td><td>16 MHz</td><td>32 Kb</td><td>2.5 Kb<tr><td><span class=\"label label-default\">miniatmega168</span></td><td><a href=http://arduino.cc/en/Main/ArduinoBoardMini target=_blank>Arduino Mini (ATmega168)</a></td><td>ATmega168</td><td>16 MHz</td><td>16 Kb</td><td>1 Kb<tr><td><span class=\"label label-default\">miniatmega328</span></td><td><a href=http://arduino.cc/en/Main/ArduinoBoardMini target=_blank>Arduino Mini (ATmega328P)</a></td><td>ATmega328P</td><td>16 MHz</td><td>32 Kb</td><td>2 Kb<tr><td><span class=\"label label-default\">nanoatmega168</span></td><td><a href=http://arduino.cc/en/Main/ArduinoBoardNano target=_blank>Arduino Nano (ATmega168)</a></td><td>ATmega168</td><td>16 MHz</td><td>16 Kb</td><td>1 Kb<tr><td><span class=\"label label-default\">nanoatmega328</span></td><td><a href=http://arduino.cc/en/Main/ArduinoBoardNano target=_blank>Arduino Nano (ATmega328P)</a></td><td>ATmega328P</td><td>16 MHz</td><td>32 Kb</td><td>2 Kb<tr><td><span class=\"label label-default\">pro8MHzatmega168</span></td><td><a href=http://arduino.cc/en/Main/ArduinoBoardProMini target=_blank>Arduino Pro or Pro Mini (ATmega168, 3.3V)</a></td><td>ATmega168</td><td>8 MHz</td><td>16 Kb</td><td>1 Kb<tr><td><span class=\"label label-default\">pro16MHzatmega168</span></td><td><a href=http://arduino.cc/en/Main/ArduinoBoardProMini target=_blank>Arduino Pro or Pro Mini (ATmega168, 5V)</a></td><td>ATmega168</td><td>16 MHz</td><td>16 Kb</td><td>1 Kb<tr><td><span class=\"label label-default\">pro8MHzatmega328</span></td><td><a href=http://arduino.cc/en/Main/ArduinoBoardProMini target=_blank>Arduino Pro or Pro Mini (ATmega328P, 3.3V)</a></td><td>ATmega328P</td><td>8 MHz</td><td>32 Kb</td><td>2 Kb<tr><td><span class=\"label label-default\">pro16MHzatmega328</span></td><td><a href=http://arduino.cc/en/Main/ArduinoBoardProMini target=_blank>Arduino Pro or Pro Mini (ATmega328P, 5V)</a></td><td>ATmega328P</td><td>16 MHz</td><td>32 Kb</td><td>2 Kb<tr><td><span class=\"label label-default\">uno</span></td><td><a href=http://arduino.cc/en/Main/ArduinoBoardUno>Arduino Uno</a></td><td>ATmega328P</td><td>16 MHz</td><td>32 Kb</td><td>2 Kb</td></tr></td></tr></td></tr></td></tr></td></tr></td></tr></td></tr></td></tr></td></tr></td></tr></td></tr></td></tr></td></tr></td></tr></td></tr></td></tr></td></tr></td></tr></td></tr></td></tr></tbody></th></tr></thead></table></tab><tab active=vm.vendors.engduino.active><tab-heading><a href=#!/boards/engduino ng-click=\"vm.changeVendor('engduino')\"><h4>Engduino</h4></a></tab-heading><table class=\"table table-striped\"><thead><tr><th>Type <span class=\"label label-default\">board</span></th><th>Name</th><th>Microcontroller</th><th>Frequency</th><th>Flash</th><th>RAM<tbody><tr><td><span class=\"label label-default\">engduinov1</span></td><td><a href=\"http://www.engduino.org/\" target=_blank>Engduino 1</a></td><td>ATmega32u4</td><td>16 MHz</td><td>32 Kb</td><td>2.5 Kb<tr><td><span class=\"label label-default\">engduinov2</span></td><td><a href=\"http://www.engduino.org/\" target=_blank>Engduino 2</a></td><td>ATmega32u4</td><td>16 MHz</td><td>32 Kb</td><td>2.5 Kb<tr><td><span class=\"label label-default\">engduinov3</span></td><td><a href=\"http://www.engduino.org/\" target=_blank>Engduino 3</a></td><td>ATmega32u4</td><td>16 MHz</td><td>32 Kb</td><td>2.5 Kb</td></tr></td></tr></td></tr></tbody></th></tr></thead></table><div class=\"alert alert-warning\"><ul class=fa-ul><li><i class=\"fa fa-info-circle fa-lg fa-li\"></i> If you are going to use onboard sensors, please install <a href=#!/lib/show/123/EngduinoV3 class=alert-link>Engduino library</a> with the examples.</li></ul></div></tab><tab active=vm.vendors.microduino.active><tab-heading><a href=#!/boards/microduino ng-click=\"vm.changeVendor('microduino')\"><h4>Microduino</h4></a></tab-heading><table class=\"table table-striped\"><thead><tr><th>Type <span class=\"label label-default\">board</span></th><th>Name</th><th>Microcontroller</th><th>Frequency</th><th>Flash</th><th>RAM<tbody><tr><td><span class=\"label label-default\">168pa8m</span></td><td><a href=\"http://www.microduino.cc/wiki/index.php?title=Microduino-Core\" target=_blank>Microduino Core (ATmega168P, 3.3V)</a></td><td>ATmega168P</td><td>8 MHz</td><td>16 Kb</td><td>1 Kb<tr><td><span class=\"label label-default\">168pa16m</span></td><td><a href=\"http://www.microduino.cc/wiki/index.php?title=Microduino-Core\" target=_blank>Microduino Core (ATmega168P, 5V)</a></td><td>ATmega168P</td><td>16 MHz</td><td>16 Kb</td><td>1 Kb<tr><td><span class=\"label label-default\">328p8m</span></td><td><a href=\"http://www.microduino.cc/wiki/index.php?title=Microduino-Core\" target=_blank>Microduino Core (ATmega328P, 3.3V)</a></td><td>ATmega328P</td><td>8 MHz</td><td>32 Kb</td><td>2 Kb<tr><td><span class=\"label label-default\">328p16m</span></td><td><a href=\"http://www.microduino.cc/wiki/index.php?title=Microduino-Core\" target=_blank>Microduino Core (ATmega328P, 5V)</a></td><td>ATmega328P</td><td>16 MHz</td><td>32 Kb</td><td>2 Kb<tr><td><span class=\"label label-default\">644pa8m</span></td><td><a href=\"http://www.microduino.cc/wiki/index.php?title=Microduino-Core%2B\" target=_blank>Microduino Core+ (ATmega644PA, 3.3V)</a></td><td>ATmega644PA</td><td>8 MHz</td><td>64 Kb</td><td>4 Kb<tr><td><span class=\"label label-default\">644pa16m</span></td><td><a href=\"http://www.microduino.cc/wiki/index.php?title=Microduino-Core%2B\" target=_blank>Microduino Core+ (ATmega644PA, 5V)</a></td><td>ATmega644PA</td><td>16 MHz</td><td>64 Kb</td><td>4 Kb<tr><td><span class=\"label label-default\">1284p8m</span></td><td><a href=\"http://www.microduino.cc/wiki/index.php?title=Microduino-Core%2B\" target=_blank>Microduino Core+ (Atmega1284P, 3.3V)</a></td><td>Atmega1284P</td><td>8 MHz</td><td>128 Kb</td><td>16 Kb<tr><td><span class=\"label label-default\">1284p16m</span></td><td><a href=\"http://www.microduino.cc/wiki/index.php?title=Microduino-Core%2B\" target=_blank>Microduino Core+ (Atmega1284P, 5V)</a></td><td>Atmega1284P</td><td>16 MHz</td><td>128 Kb</td><td>16 Kb<tr><td><span class=\"label label-default\">32u416m</span></td><td><a href=\"http://www.microduino.cc/wiki/index.php?title=Microduino-CoreUSB\" target=_blank>Microduino-Core USB</a></td><td>ATmega32u4</td><td>16 MHz</td><td>32 Kb</td><td>2.5 Kb</td></tr></td></tr></td></tr></td></tr></td></tr></td></tr></td></tr></td></tr></td></tr></tbody></th></tr></thead></table></tab><tab active=vm.vendors.raspduino.active><tab-heading><a href=#!/boards/raspduino ng-click=\"vm.changeVendor('raspduino')\"><h4>Raspduino</h4></a></tab-heading><table class=\"table table-striped\"><thead><tr><th>Type <span class=\"label label-default\">board</span></th><th>Name</th><th>Microcontroller</th><th>Frequency</th><th>Flash</th><th>RAM<tbody><tr><td><span class=\"label label-default\">raspduino</span></td><td><a href=http://www.bitwizard.nl/wiki/index.php/Raspduino target=_blank>Raspduino</a></td><td>ATmega328P</td><td>16 MHz</td><td>32 Kb</td><td>2 Kb</td></tr></tbody></th></tr></thead></table></tab><tab active=vm.vendors.timsp430.active><tab-heading><a href=#!/boards/timsp430 ng-click=\"vm.changeVendor('timsp430')\"><h4>TI MSP430 LaunchPads</h4></a></tab-heading><table class=\"table table-striped\"><thead><tr><th>Type <span class=\"label label-default\">board</span></th><th>Name</th><th>Microcontroller</th><th>Frequency</th><th>Flash</th><th>RAM<tbody><tr><td><span class=\"label label-default\">lpmsp430g2231</span></td><td><a href=http://www.ti.com/ww/en/launchpad/launchpads-msp430-msp-exp430g2.html target=_blank>MSP430G2231 LaunchPad</a></td><td>MSP430G2231</td><td>16 MHz</td><td>2 Kb</td><td>128 B<tr><td><span class=\"label label-default\">lpmsp430g2452</span></td><td><a href=http://www.ti.com/ww/en/launchpad/launchpads-msp430-msp-exp430g2.html target=_blank>MSP430G2452 LaunchPad</a></td><td>MSP430G2452</td><td>16 MHz</td><td>8 Kb</td><td>256 B<tr><td><span class=\"label label-default\">lpmsp430g2553</span></td><td><a href=http://www.ti.com/ww/en/launchpad/launchpads-msp430-msp-exp430g2.html target=_blank>MSP430G2553 LaunchPad</a></td><td>MSP430G2553</td><td>16 MHz</td><td>16 Kb</td><td>512 B<tr><td><span class=\"label label-default\">lpmsp430f5529</span></td><td><a href=http://www.ti.com/ww/en/launchpad/launchpads-msp430-msp-exp430f5529lp.html target=_blank>MSP430F5529 LaunchPad (16 Mhz)</a></td><td>MSP430F5529</td><td>16 MHz</td><td>128 Kb</td><td>8 KB<tr><td><span class=\"label label-default\">lpmsp430f5529_25</span></td><td><a href=http://www.ti.com/ww/en/launchpad/launchpads-msp430-msp-exp430f5529lp.html target=_blank>MSP430F5529 LaunchPad (25 Mhz)</a></td><td>MSP430F5529</td><td>25 MHz</td><td>128 Kb</td><td>8 KB<tr><td><span class=\"label label-default\">lpmsp430fr5739</span></td><td><a href=http://www.ti.com/tool/msp-exp430fr5739 target=_blank>MSP430FR5739 Experimenter Board</a></td><td>MSP430FR5739</td><td>16 MHz</td><td>16 Kb</td><td>1 KB<tr><td><span class=\"label label-default\">lpmsp430fr5969</span></td><td><a href=http://www.ti.com/ww/en/launchpad/launchpads-msp430-msp-exp430fr5969.html target=_blank>MSP430FR5969 LaunchPad</a></td><td>MSP430FR5969</td><td>16 MHz</td><td>64 Kb</td><td>2 KB</td></tr></td></tr></td></tr></td></tr></td></tr></td></tr></td></tr></tbody></th></tr></thead></table></tab><tab active=vm.vendors.titiva.active><tab-heading><a href=#!/boards/titiva ng-click=\"vm.changeVendor('titiva')\"><h4>TI Tiva C LaunchPads</h4></a></tab-heading><table class=\"table table-striped\"><thead><tr><th>Type <span class=\"label label-default\">board</span></th><th>Name</th><th>Microcontroller</th><th>Frequency</th><th>Flash</th><th>RAM<tbody><tr><td><span class=\"label label-default\">lplm4f120h5qr</span></td><td><a href=http://www.ti.com/tool/ek-lm4f120xl target=_blank>Stellaris LM4F120 LaunchPad</a></td><td>LM4F120H5QR</td><td>80 MHz</td><td>256 Kb</td><td>32 Kb<tr><td><span class=\"label label-default\">lptm4c1230c3pm</span></td><td><a href=http://www.ti.com/ww/en/launchpad/launchpads-connected-ek-tm4c123gxl.html target=_blank>Tiva C Series TM4C123G LaunchPad</a></td><td>TM4C123GH6PM</td><td>80 MHz</td><td>256 Kb</td><td>32 Kb<tr><td><span class=\"label label-default\">lptm4c1294ncpdt</span></td><td><a href=http://www.ti.com/ww/en/launchpad/launchpads-connected-ek-tm4c1294xl.html target=_blank>Tiva C Series TM4C1294 Connected LaunchPad</a></td><td>TM4C1294NCPDT</td><td>120 Mhz</td><td>1 Mb</td><td>256 Kb</td></tr></td></tr></td></tr></tbody></th></tr></thead></table></tab></tabset><div class=\"alert alert-info\"><ul class=fa-ul><li><i class=\"fa fa-info-circle fa-lg fa-li\"></i> For more detailed information about the <em>Embedded Boards</em> please go to the <a href=http://docs.platformio.org/en/latest/platforms/index.html class=alert-link>Documentation</a> or use <a href=http://docs.platformio.org/en/latest/userguide/cmd_boards.html class=alert-link><i class=\"fa fa-terminal fa-lg\"></i> platformio boards</a> command.</li></ul></div></div>"
  );


  $templateCache.put('views/get_started.html',
    "<meta name=description content=\"PlatformIO is a cross-platform code builder and library manager for Arduino, MSP430, ARM\" view-head><meta name=keywords content=\"PlatformIO, cli, command, line, Arduino, MSP430, ARM, builder, libraries, manager, library.json\" view-head><div class=jumbotron><div class=container><h1 view-title><i class=\"fa fa-rocket\"></i> Getting Started</h1><p>Learn how to install and use <i>PlatformIO</i>, configure and build your first cross-platform <i>\"Blink\"</i> project</p></div></div><div class=container><h2>Installation</h2><p><b>PlatformIO</b> can easily be installed on the popular <i>OS</i>:<ul><li><i>Mac OS X</i></li><li><i>Linux</i> (including <i>ARMv6</i>)</li><li><i>Windows</i></li></ul>More detailed information is described in the main documentation: &nbsp; <a href=http://docs.platformio.org/en/latest/installation.html class=\"btn btn-success\" role=button analytics-on analytics-event=Click analytics-category=Button analytics-label=\"Install PlatformIO\" target=_blank>Install PlatformIO</a></p><h2>Quickstart</h2><ol><li>Find board <code>type</code> on this <a href=#!/boards>Embedded Boards</a> page or via <a href=http://docs.platformio.org/en/latest/userguide/cmd_boards.html><i class=\"fa fa-terminal fa-lg\"></i> platformio boards</a> command</li><li>Initialize new <i>PlatformIO</i> based project via <a href=http://docs.platformio.org/en/latest/userguide/cmd_init.html><i class=\"fa fa-terminal fa-lg\"></i> platformio init</a> command with the pre-configured environments for your boards:<br><span class=\"label label-default\">Terminal</span><div class=\"well terminal\"><p class=cmd><i class=\"fa fa-terminal fa-lg\"></i> platformio init --board=TYPE_1 --board=TYPE_2 --board=TYPE_N</p><small><font color=yellow>The current working directory <font color=cyan>***</font> will be used for the new project.<br>You can specify another project directory via<br>`platformio init -d %PATH_TO_THE_PROJECT_DIR%` command.</font><br><br>The next files/directories will be created in <font color=cyan>***</font><br><font color=cyan>`platformio.ini`</font> - Project Configuration File<br><font color=cyan>`src`</font> - a source directory. Put your source code here<br><font color=cyan>`lib`</font> - a directory for the project specific libraries<br>Do you want to continue? [y/N]: y<br><font color=green>Project has been successfully initialized!</font></small></div><p>Put your source code <code>*.h, *.c, *.cpp or *.ino</code> files to <code>src</code> directory.</p></li><li>Process the projects's environments via <a href=http://docs.platformio.org/en/latest/userguide/cmd_run.html><i class=\"fa fa-terminal fa-lg\"></i> platformio run</a> command.<p><u>Change working directory</u> to the project's root where is located <a href=http://docs.platformio.org/en/latest/projectconf.html>Project Configuration File (platformio.ini)</a> and run:</p><span class=\"label label-default\">Terminal</span><div class=\"well terminal\"><span class=cmd><i class=\"fa fa-terminal fa-lg\"></i> platformio run</span></div></li></ol><div class=\"alert alert-info\"><ul class=fa-ul><li><i class=\"fa fa-info fa-lg fa-li\"></i> Firmware \"auto-uploading\" is enabled by default. You can disable it in <a href=http://docs.platformio.org/en/latest/projectconf.html class=alert-link>Project Configuration File (platformio.ini)</a> through commenting <code># targets = upload</code> line.<br>The manual firmware uploading is allowed via <a href=http://docs.platformio.org/en/latest/userguide/cmd_run.html class=alert-link><i class=\"fa fa-terminal fa-lg\"></i> platformio run --target upload</a> command.</li></ul></div><div class=\"alert alert-info\"><ul class=fa-ul><li><i class=\"fa fa-info fa-lg fa-li\"></i> If you have specific board which isn't supported by <i>PlatformIO</i>, then you can install development platform via <a href=http://docs.platformio.org/en/latest/userguide/cmd_install.html class=alert-link><i class=\"fa fa-terminal fa-lg\"></i> platformio install</a> command in manual mode or <a href=https://github.com/ivankravets/platformio/issues target=_blink class=alert-link>create new issue and ask to add it</a>.</li></ul></div><hr><h2>\"Blink\" project example</h2><p>With the help of <em>PlatformIO</em> we can <strong>build the same code</strong> for the different development platforms. Let's define example environments for the most popular boards from the different platforms:<table class=\"table table-striped\"><thead><tr><th>Platform</th><th>Board</th><th>Framework<tbody><tr><td><span class=\"label label-default\">atmelavr</span> <a href=#!/platforms/atmelavr>Atmel AVRÂ® 8- and 32-bit MCUs</a></td><td><span class=\"label label-default\">uno</span> <a href=#!/boards/arduino>Arduino Uno (ATmega328P)</a></td><td><span class=\"label label-default\">arduino</span> <a href=#!/platforms/atmelavr>Arduino Wiring-based Framework</a><tr><td><span class=\"label label-default\">timsp430</span> <a href=#!/platforms/timsp430>MSP430 16-bit microcontrollers (MCUs) from TI</a></td><td><span class=\"label label-default\">lpmsp430g2553</span> <a href=#!/boards/timsp430>MSP430G2553 LaunchPad</a></td><td><span class=\"label label-default\">energia</span> <a href=#!/platforms/timsp430>Energia Wiring-based Framework</a><tr><td><span class=\"label label-default\">titiva</span> <a href=#!/platforms/titiva>TI TM4C12x MCUs ARMÂ® CortexÂ®-M4</a></td><td><span class=\"label label-default\">lptm4c1230c3pm</span> <a href=#!/boards/titiva>Tiva C Series TM4C123G LaunchPad</a></td><td><span class=\"label label-default\">energia</span> <a href=#!/platforms/titiva>Energia Wiring-based Framework</a></td></tr></td></tr></td></tr></tbody></th></tr></thead></table></p><p>The source code located below in <code>main.cpp</code> will turn <em>ON</em> and <em>OFF</em> the <a href=http://wiring.org.co target=_blank>Wiring</a> compatible board <mark>LED</mark> with intervals of 1 second (1000 milliseconds).</p><div class=row><div class=col-md-6><span class=\"label label-default\">main.cpp</span><pre class=hljscode hljs language=cpp>\n" +
    "#ifdef ENERGIA\n" +
    "#include \"Energia.h\"\n" +
    "#else\n" +
    "#include \"Arduino.h\"\n" +
    "#endif\n" +
    "\n" +
    "#ifndef LED_PIN\n" +
    "// Most Arduino boards already have a LED attached to pin 13 on the board itself\n" +
    "#define LED_PIN 13\n" +
    "#endif\n" +
    "\n" +
    "void setup() {\n" +
    "  pinMode(LED_PIN, OUTPUT);     // set pin as output\n" +
    "}\n" +
    "\n" +
    "void loop() {\n" +
    "  digitalWrite(LED_PIN, HIGH);  // set the LED on\n" +
    "  delay(1000);                  // wait for a second\n" +
    "  digitalWrite(LED_PIN, LOW);   // set the LED off\n" +
    "  delay(1000);                  // wait for a second\n" +
    "}</pre></div><div class=col-md-6><span class=\"label label-default\">platformio.ini</span><pre class=hljscode hljs language=ini>\n" +
    ";\n" +
    "; Project Configuration File\n" +
    ";\n" +
    "; A detailed documentation with the EXAMPLES is located here:\n" +
    "; http://docs.platformio.org/en/latest/projectconf.html\n" +
    ";\n" +
    "\n" +
    "[env:arduino_uno]\n" +
    "platform = atmelavr\n" +
    "framework = arduino\n" +
    "board = uno\n" +
    "\n" +
    "[env:launchpad_msp430g2]\n" +
    "platform = timsp430\n" +
    "framework = energia\n" +
    "board = lpmsp430g2553\n" +
    "\n" +
    "[env:launchpad_tm4c1230c3pm]\n" +
    "platform = titiva\n" +
    "framework = energia\n" +
    "board = lptm4c1230c3pm\n" +
    "build_flags = -DLED_PIN=GREEN_LED</pre></div></div><div class=\"alert alert-info\"><ul class=fa-ul><li><i class=\"fa fa-github fa-lg fa-li\"></i> The source code and results of this <code>Blink Project</code> can be downloaded from <a href=https://github.com/ivankravets/platformio/tree/develop/examples/wiring-blink class=alert-link target=_blank><i class=\"fa fa-download fa-lg\"></i> PlatformIO Project Examples</a> repository.</li></ul></div><h3 class=header-underlined>Initialize empty project</h3><p><i>PlatformIO</i>-based project consists of <strong>2 main parts</strong>:<ul><li><a href=http://docs.platformio.org/en/latest/projectconf.html>Project Configuration File (platformio.ini)</a> - where you can setup different environments with specific options (platform type, firmware uploading settings, pre-built framework, build flags and many more)</li><li><code>src</code> directory - where your source code should be placed</li></ul></p><p>There is <a href=http://docs.platformio.org/en/latest/userguide/cmd_install.html><i class=\"fa fa-terminal fa-lg\"></i> platformio init</a> command which allows you to initialize empty project. We recommend to run this command within empty directory.</p><span class=\"label label-default\">Terminal</span><div class=\"well terminal\"><p class=cmd><i class=\"fa fa-terminal fa-lg\"></i> platformio init --board=uno --board=lpmsp430g2553 --board=lptm4c1230c3pm</p><small><font color=yellow>The current working directory <font color=cyan>***</font> will be used for the new project.<br>You can specify another project directory via<br>`platformio init -d %PATH_TO_THE_PROJECT_DIR%` command.</font><br><br>The next files/directories will be created in <font color=cyan>***</font><br><font color=cyan>`platformio.ini`</font> - Project Configuration File<br><font color=cyan>`src`</font> - a source directory. Put your source code here<br><font color=cyan>`lib`</font> - a directory for the project specific libraries<br>Do you want to continue? [y/N]: y<br><font color=green>Project has been successfully initialized!</font></small></div><h3 class=header-underlined>Process environments</h3><p>Copy <code>main.cpp</code> file to <code>src</code> directory, replace the content of the <code>platformio.ini</code> file with the source code that is described above.<br>Then process environments with <a href=http://docs.platformio.org/en/latest/userguide/cmd_run.html><i class=\"fa fa-terminal fa-lg\"></i> platformio run</a> command.</p><span class=\"label label-default\">Terminal</span><div class=\"well terminal\"><p class=cmd><i class=\"fa fa-terminal fa-lg\"></i> platformio run</p><small>Processing <font color=cyan>arduino_uno</font> environment:<br><font color=green>avr-g++ -o .pioenvs/arduino_uno/src/main.o -c -fno-exceptions -fno-threadsafe-statics -g -Os -ffunction-sections -fdata-sections -MMD -mmcu=atmega328p -DF_CPU=16000000L -DARDUINO_ARCH_AVR -DARDUINO=158 -DARDUINO_AVR_UNO -I.pioenvs/arduino_uno/FrameworkArduino -I.pioenvs/arduino_uno/FrameworkArduinoVariant .pioenvs/arduino_uno/src/main.cpp<br>[... a list of the rest compiled files ...]<br>avr-ranlib .pioenvs/arduino_uno/libFrameworkArduino.a<br>avr-g++ -o .pioenvs/arduino_uno/firmware.elf -Os -Wl,--gc-sections -mmcu=atmega328p .pioenvs/arduino_uno/src/main.o -L.pioenvs/arduino_uno .pioenvs/arduino_uno/libFrameworkArduino.a -lm<br>avr-objcopy -O ihex -R .eeprom .pioenvs/arduino_uno/firmware.elf .pioenvs/arduino_uno/firmware.hex<br></font><br>Processing <font color=cyan>launchpad_msp430g2</font> environment:<br><font color=green>msp430-g++ -o .pioenvs/launchpad_msp430g2/src/main.o -c -g -Os -ffunction-sections -fdata-sections -MMD -mmcu=msp430g2553 -DF_CPU=16000000L -DARDUINO=101 -DENERGIA=13 -I.pioenvs/launchpad_msp430g2/FrameworkEnergia -I.pioenvs/launchpad_msp430g2/FrameworkEnergiaVariant .pioenvs/launchpad_msp430g2/src/main.cpp<br>[... a list of the rest compiled files ...]<br>msp430-ranlib .pioenvs/launchpad_msp430g2/libFrameworkEnergia.a<br>msp430-gcc -o .pioenvs/launchpad_msp430g2/firmware.elf -Os -mmcu=msp430g2553 -Wl,-gc-sections,-u,main .pioenvs/launchpad_msp430g2/src/main.o -L.pioenvs/launchpad_msp430g2 .pioenvs/launchpad_msp430g2/libFrameworkEnergia.a -lm<br>msp430-objcopy -O ihex -R .eeprom .pioenvs/launchpad_msp430g2/firmware.elf .pioenvs/launchpad_msp430g2/firmware.hex<br></font> <font color=yellow>.pioenvs/launchpad_msp430g2/FrameworkEnergia/Stream.cpp: In member function 'bool Stream::find(char*)':<br>.pioenvs/launchpad_msp430g2/FrameworkEnergia/Stream.cpp:78:30: warning: deprecated conversion from string constant to 'char*' [-Wwrite-strings]<br><br></font> Processing <font color=cyan>launchpad_tm4c1230c3pm</font> environment:<br><font color=green>arm-none-eabi-g++ -o .pioenvs/launchpad_tm4c1230c3pm/src/main.o -c -fno-rtti -fno-exceptions -g -Os -ffunction-sections -fdata-sections -Wall -mthumb -mcpu=cortex-m4 -mfloat-abi=hard -mfpu=fpv4-sp-d16 -fsingle-precision-constant -MMD -DF_CPU=80000000L -DLED_PIN=GREEN_LED -DARDUINO=101 -DENERGIA=13 -I.pioenvs/launchpad_tm4c1230c3pm/FrameworkEnergia -I.pioenvs/launchpad_tm4c1230c3pm/FrameworkEnergiaVariant .pioenvs/launchpad_tm4c1230c3pm/src/main.cpp<br>[... a list of the rest compiled files ...]<br>arm-none-eabi-ranlib .pioenvs/launchpad_tm4c1230c3pm/libFrameworkEnergia.a<br>arm-none-eabi-g++ -o .pioenvs/launchpad_tm4c1230c3pm/firmware.elf -Os -nostartfiles -nostdlib -Wl,--gc-sections -Wl,--entry=ResetISR -mthumb -mcpu=cortex-m4 -mfloat-abi=hard -mfpu=fpv4-sp-d16 -fsingle-precision-constant -T /Users/ikravets/.platformio/packages/framework-energiativa/cores/lm4f/lm4fcpp_blizzard.ld .pioenvs/launchpad_tm4c1230c3pm/src/main.o -L.pioenvs/launchpad_tm4c1230c3pm .pioenvs/launchpad_tm4c1230c3pm/libFrameworkEnergia.a -lc -lgcc -lm<br>arm-none-eabi-objcopy -O binary .pioenvs/launchpad_tm4c1230c3pm/firmware.elf .pioenvs/launchpad_tm4c1230c3pm/firmware.bin<br></font> <font color=yellow>In file included from .pioenvs/launchpad_tm4c1230c3pm/FrameworkEnergia/IPAddress.cpp:3:0: .pioenvs/launchpad_tm4c1230c3pm/FrameworkEnergia/IPAddress.h: In member function 'IPAddress::operator uint32_t()': .pioenvs/launchpad_tm4c1230c3pm/FrameworkEnergia/IPAddress.h:51:55: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]<br>operator uint32_t() { return *((uint32_t*)_address); };<br>[... the rest warnings ...]</font></small></div><h3 class=header-underlined>Project Structure <small>after processing</small></h3><pre>\n" +
    "|-- .pioenvs\n" +
    "|   |-- arduino_uno\n" +
    "|   |   |-- FrameworkArduino\n" +
    "|   |   |-- FrameworkArduinoVariant\n" +
    "|   |   |-- firmware.elf\n" +
    "|   |   |-- firmware.hex\n" +
    "|   |   |-- libFrameworkArduino.a\n" +
    "|   |   `-- src\n" +
    "|   |-- launchpad_msp430g2\n" +
    "|   |   |-- FrameworkEnergia\n" +
    "|   |   |-- FrameworkEnergiaVariant\n" +
    "|   |   |-- firmware.elf\n" +
    "|   |   |-- firmware.hex\n" +
    "|   |   |-- libFrameworkEnergia.a\n" +
    "|   |   `-- src\n" +
    "|   `-- launchpad_tm4c1230c3pm\n" +
    "|       |-- FrameworkEnergia\n" +
    "|       |-- FrameworkEnergiaVariant\n" +
    "|       |-- firmware.bin\n" +
    "|       |-- firmware.elf\n" +
    "|       |-- libFrameworkEnergia.a\n" +
    "|       `-- src\n" +
    "|-- platformio.ini\n" +
    "`-- src\n" +
    "    `-- main.cpp\n" +
    "</pre><h3 class=header-underlined>Firmware uploading</h3><p>For uploading firmware to embedded device you can use <a href=http://docs.platformio.org/en/latest/userguide/cmd_run.html><i class=\"fa fa-terminal fa-lg\"></i> platformio run</a> command with <code>--target upload</code> option.</p><span class=\"label label-default\">Terminal</span><div class=\"well terminal\"><span class=cmd><i class=\"fa fa-terminal fa-lg\"></i> platformio run --target upload</span></div><p>If you want to enable \"auto-uploading\" when source code is built successfully, then define for the specific environment's option <code>targets = upload</code>. More detailed information about <code>targets</code> option is available in the <a href=http://docs.platformio.org/en/latest/projectconf.html#targets>documentation</a>.</p><div class=\"alert alert-info\"><ul class=fa-ul><li><i class=\"fa fa-info-circle fa-lg fa-li\"></i> Don't forget that you can process only specific environments <code>-e</code> or targets <code>-t</code>. Read more about it in <a href=http://docs.platformio.org/en/latest/userguide/cmd_run.html#examples class=alert-link><i class=\"fa fa-terminal fa-lg\"></i> platformio run</a> command examples.</li></ul></div><h2>Further Reading</h2><ul><li><a href=http://docs.platformio.org>Documentation</a></li><li><a href=https://github.com/ivankravets/platformio/tree/develop/examples target=_blank>Project Examples</a></li></ul></div>"
  );


  $templateCache.put('views/home.html',
    "<meta name=description content=\"PlatformIO is a cross-platform code builder and library manager for Arduino, MSP430, ARM\" view-head><meta name=keywords content=\"PlatformIO, cli, command, line, Arduino, MSP430, ARM, builder, libraries, manager, library.json\" view-head><div class=\"jumbotron home\"><div class=\"container text-center\"><div class=\"logo text-shadow\">&nbsp;&nbsp; \\/<br>_@@</div><h1>PlatformIO is a cross-platform code builder and the missing library manager</h1><p><a class=\"btn btn-success btn-lg\" href=#!/get-started role=button analytics-on analytics-event=Click analytics-category=Button analytics-label=\"Get Started\" analytics-value=2><i class=\"fa fa-rocket fa-lg\"></i> &nbsp;Get Started</a></p><p><ul class=list-inline><li>Version <a href=http://docs.platformio.org/en/latest/history.html target=_blank>0.10.2</a></li><li>Â·</li><li><i class=\"fa fa-github\"></i> <a href=https://github.com/ivankravets/platformio target=_blank>GitHub</a></li><li>Â·</li><li><i class=\"fa fa-book\"></i> <a href=\"http://docs.platformio.org/\">Documentation</a></li><li>Â·</li><li>Made with <i class=\"fa fa-heart\" tooltip=\"Made in Ukraine\"></i> in <a href=http://www.ikravets.com/about-me target=_blank>Ukraine</a></li></ul></p></div></div><article><div class=\"container home\"><div class=\"row text-center top-banner\"><div class=col-lg-4><center><a href=#!/platforms><div class=\"img-circle text-shadow\"><i class=\"fa fa-laptop fa-5x\"></i></div></a></center><h2>Development Platforms</h2><p>You have <strong>no need</strong> to install any <em>IDE</em> or compile any tool chains. <em>PlatformIO</em> has pre-built different development platforms including: compiler, debugger, uploader (for embedded) and many other useful tools.</p><p><a class=\"btn btn-default\" href=#!/platforms role=button>Read More</a></p></div><div class=col-lg-4><center><a href=#!/boards><div class=\"img-circle text-shadow\"><i class=\"fa fa-gamepad fa-5x\"></i></div></a></center><h2>Embedded Boards</h2><p><i>PlatformIO</i> has pre-configured settings for most popular <i>Embedded Boards</i>. You have no need to specify in <a href=http://docs.platformio.org/en/latest/projectconf.html>Project Configuration File</a> type or frequency of <i>MCU</i>, upload protocol or etc. Please use <span class=\"label label-default\">board</span> option.</p><p><a class=\"btn btn-default\" href=#!/boards role=button>Read More</a></p></div><div class=col-lg-4><center><a href=#!/lib><div class=\"img-circle text-shadow\"><i class=\"fa fa-book fa-5x\"></i></div></a></center><h2>Library Manager</h2><p><i>PlatformIO Library Manager</i> allows you to organize external libraries. You can search for new libraries via <a href=http://docs.platformio.org/en/latest/userguide/lib/cmd_search.html>Command-Line</a> or <a href=#!/lib>Web</a> interfaces. Due to <a href=http://docs.platformio.org/en/latest/userguide/lib/cmd_update.html>platformio lib update</a> command you will have up-to-date libraries.</p><p><a class=\"btn btn-default\" href=#!/lib role=button>Read More</a></p></div></div><hr class=home-divider><div class=text-center><h2>Use whenever. <span class=text-muted>Run everywhere.</span></h2><p class=lead><i>PlatformIO</i> is written in pure <i>Python</i> and <strong>doesn't depend</strong> on any additional libraries/tools from an operation system. It allows you to use <i>PlatformIO</i> beginning from <i>PC</i> and ending with credit-card sized computers (like <i>Raspberry Pi</i>)</p><div class=\"row text-center\"><div class=col-lg-4><i class=\"fa fa-apple fa-4x\"></i><h4>Mac</h4></div><div class=col-lg-4><i class=\"fa fa-linux fa-4x\"></i><h4>Linux, +ARMv6</h4></div><div class=col-lg-4><i class=\"fa fa-windows fa-4x\"></i><h4>Windows</h4></div></div></div></div><hr class=home-divider><div class=\"container text-center main-featurette\"><div class=\"row featurette text-left\"><div class=col-md-7><h2 class=featurette-heading>Embedded Development. <span class=text-muted>Easier Than Ever.</span></h2><p class=lead><i>PlatformIO</i> is well suited for embedded development and has pre-configured settings for most popular <a href=#!/boards>Embedded Boards</a>.</p><p class=lead><i class=\"fa fa-check\"></i> <b><font color=blue>Co</font><font color=cyan>lour</font><font color=red>ful</font></b> <a href=https://raw.githubusercontent.com/ivankravets/platformio/develop/examples/platformio-examples.png target=_blank>command-line output</a></p><p class=lead><i class=\"fa fa-check\"></i> Built-in <a href=http://docs.platformio.org/en/latest/userguide/cmd_serialports.html#platformio-serialports-monitor>Serial Port Monitor</a></p><p class=lead><i class=\"fa fa-check\"></i> Configurable <a href=http://docs.platformio.org/en/latest/projectconf.html#build-flags>build -flags/-options</a></p><p class=lead><i class=\"fa fa-check\"></i> Automatic <b>firmware uploading</b></p><p class=lead><i class=\"fa fa-check\"></i> Integration with <a href=http://docs.platformio.org/en/latest/ide.html>development environments (IDE)</a></p><p class=lead><i class=\"fa fa-check\"></i> Ready for <b>cloud compilers</b></p><p class=lead><i class=\"fa fa-thumbs-up\"></i> Pre-built tool chains, frameworks for the popular <a href=#!/platforms>Hardware Platforms</a></p></div><div class=col-md-5><img src=http://cdn.platformio.org/images/platformio-embedded-development.e2054e85.png class=img-thumbnail alt=\"PlatformIO Embedded Development Architecture\" title=\"PlatformIO Embedded Development Architecture\" tooltip=\"PlatformIO Embedded Development Architecture\"></div></div><hr class=home-divider><div class=\"row featurette text-left\"><div class=col-md-5><img src=http://cdn.platformio.org/images/platformio-library-manager.e7c62074.png class=img-thumbnail alt=\"PlatformIO Library Manager Architecture\" title=\"PlatformIO Library Manager Architecture\" tooltip=\"PlatformIO Library Manager Architecture\"></div><div class=col-md-7><h2 class=featurette-heading>The Missing Library Manager. <span class=text-muted>It's here!</span></h2><p class=lead><i>PlatformIO Library Manager</i> is the missing library manager for development platforms which allows you to organize and have up-to-date external libraries.</p><p class=lead><i class=\"fa fa-check\"></i> Friendly <a href=http://docs.platformio.org/en/latest/librarymanager/index.html>Command-Line Interface</a></p><p class=lead><i class=\"fa fa-check\"></i> Modern <a href=#!/lib>Web 2.0 Library Search</a></p><p class=lead><i class=\"fa fa-check\"></i> Open Source <a href=https://github.com/ivankravets/platformio-api target=_blank>Library Registry API</a></p><p class=lead><i class=\"fa fa-check\"></i> Library Crawler based on <a href=http://docs.platformio.org/en/latest/librarymanager/config.html>library.json</a> specification</p><p class=lead><i class=\"fa fa-check\"></i> Library <b>dependency management</b></p><p class=lead><i class=\"fa fa-thumbs-up\"></i> Automatic library updating</p></div></div><hr class=home-divider><div class=\"row featurette text-left\"><div class=col-md-7><h2 class=featurette-heading>Smart Code Builder. <span class=text-muted>Fast and Reliable.</span></h2><p class=lead><i>PlatformIO Code Builder</i> is built-on a next-generation software construction tool named <a href=http://www.scons.org target=_blank>SCons</a>. Think of <i>SCons</i> as an improved, cross-platform substitute for the classic <i>Make</i> utility.</p><p class=lead><i class=\"fa fa-check\"></i> Reliable, automatic <strong>dependency analysis</strong></p><p class=lead><i class=\"fa fa-check\"></i> Reliable detection of <strong>build changes</strong></p><p class=lead><i class=\"fa fa-check\"></i> Improved support for <strong>parallel builds</strong></p><p class=lead><i class=\"fa fa-check\"></i> Ability to share <strong>built files in a cache</strong></p><p class=lead><i class=\"fa fa-thumbs-up\"></i> <strong>Lookup</strong> for external libraries which are installed via <a href=http://docs.platformio.org/en/latest/librarymanager/index.html><i class=\"fa fa-book\"></i> Library Manager</a></p></div><div class=col-md-5><img src=http://cdn.platformio.org/images/platformio-scons-builder.fcf3bf80.png class=img-thumbnail alt=\"PlatformIO Code Builder Architecture\" title=\"PlatformIO Code Builder Architecture\" tooltip=\"PlatformIO Code Builder Architecture\"></div></div></div><hr class=home-divider><div class=\"container text-center main-featurette\"><h2>Single source code. <span class=text-muted>Multiple platforms.</span></h2><p class=lead><i>PlatformIO</i> allows developer to compile the same code with different development platforms using the <i>Only One Command</i> <a href=http://docs.platformio.org/en/latest/userguide/cmd_run.html class=text-nowrap><i class=\"fa fa-terminal\"></i> platformio run</a>. This happens due to <a href=http://docs.platformio.org/en/latest/projectconf.html>Project Configuration File (platformio.ini)</a> where you can setup different environments with specific options (platform type, firmware uploading settings, pre-built framework, build flags and many more).</p><a href=#!/platforms><ul class=list-inline><li><div class=\"brands brand-atmel\"></div></li><li><div class=\"brands brand-ti\"></div></li><li><div class=\"brands brand-arduino\"></div></li><li><div class=\"brands brand-energia\"></div></li></ul></a><hr class=home-divider><h2>Need more convincing? <span class=text-muted>Try PlatformIO Now!</span></h2><p><a class=\"btn btn-success btn-lg\" href=#!/get-started role=button analytics-on analytics-event=Click analytics-category=Button analytics-label=\"Get Started\" analytics-value=1><i class=\"fa fa-rocket fa-lg\"></i> &nbsp;Get Started</a></p></div></article>"
  );


  $templateCache.put('views/lib_examples.html',
    "<view-title>{{ vm.searchResult.page > 1 ? 'Page ' + vm.searchResult.page + ' Â·' : '' }} {{ vm.searchQuery ? vm.searchQuery + ' Â·' : '' }} Library Examples</view-title><meta name=description content=\"{{ vm.meta.description }}\" view-head><meta name=keywords content=\"{{ vm.meta.keywords }}\" view-head><div class=jumbotron><div class=container><h1><i class=\"fa fa-graduation-cap\"></i> Examples <small>by Libraries</small></h1></div></div><div class=container><ng-include src=\"'views/lib_search_form.html'\"></ng-include><hr><div class=\"search-filters text-right\"><div class=btn-group dropdown><button type=button class=\"btn default dropdown-toggle\" dropdown-toggle>Frameworks <span class=caret></span></button><ul class=dropdown-menu role=menu><li><a href=\"\" ng-click=\"vm.searchQuery=''; vm.submitSearchForm()\">All</a></li><li ng-repeat=\"item in vm.frameworks\"><a href=\"\" ng-click=\"vm.searchQuery='framework:{{ item.name }}'; vm.submitSearchForm()\">{{ item.title }}</a></li></ul></div><div class=btn-group dropdown><button type=button class=\"btn default dropdown-toggle\" dropdown-toggle>Platforms <span class=caret></span></button><ul class=dropdown-menu role=menu><li><a href=\"\" ng-click=\"vm.searchQuery=''; vm.submitSearchForm()\">All</a></li><li ng-repeat=\"item in vm.platforms\"><a href=\"\" ng-click=\"vm.searchQuery='platform:{{ item.name }}'; vm.submitSearchForm()\">{{ item.title }}</a></li></ul></div></div><br><div ng-if=vm.searchResult.items.length><section class=examples ng-repeat=\"item in vm.searchResult.items\"><div class=row><div class=col-xs-7><h3 class=title><a ng-href=\"#!/lib/show/{{ item.lib.id }}/{{ item.lib.name }}?example={{ item.name }}\">{{ item.lib.name }} / {{ item.name }}</a> <small>by <span ng-repeat=\"name in item.lib.authornames\">{{ name }}<span ng-if=!$last>,</span></span></small></h3></div><div class=\"col-xs-5 text-right\"><span ng-if=item.lib.frameworks.length tooltip=\"Compatible Frameworks\"><i class=\"fa fa-cogs\"></i>&nbsp;<span ng-repeat=\"name in item.lib.frameworks\">{{ name | nameToTitle : vm.frameworks }}<span ng-if=!$last>,&nbsp;</span></span> &nbsp;</span> <span ng-if=item.lib.platforms.length tooltip=\"Compatible Platforms\"><i class=\"fa fa-laptop\"></i>&nbsp;<span ng-repeat=\"name in item.lib.platforms\">{{ name | nameToTitle : vm.platforms }}<span ng-if=!$last>,&nbsp;</span></span> &nbsp;</span></div></div><p>{{ item.lib.description }}</p><p class=keywords><a ng-href=\"#!/lib/examples?query=keyword%253A%2522{{ keyword }}%2522\" class=\"btn btn-primary btn-xs\" ng-repeat=\"keyword in item.lib.keywords\"><i class=\"fa fa-tag fa-lg\"></i> {{ keyword }}</a></p><div class=\"text-right code-toogle\"><button class=\"btn btn-primary code-toogle-btn\" type=button ng-click=\"item.fullCode=!item.fullCode\"><i ng-class=\"{'fa fa-expand': !item.fullCode, 'fa fa-compress': item.fullCode}\"></i></button></div><div hljs source=item.shortCode language=cpp ng-show=!item.fullCode></div><div hljs include=item.url language=cpp ng-show=item.fullCode></div></section><div class=text-center><pagination ng-model=vm.searchResult.page total-items=vm.searchResult.total items-per-page=vm.searchResult.perpage max-size=10 boundary-links=true rotate=false ng-change=vm.pageChanged() class=pagination-sm></pagination></div></div><br><div ng-if=!vm.searchResult.items.length class=jumbotron><h3>Nothing has been found by your request</h3><p>Try a less-specific search or use truncation (or wildcard) operator <code>*</code>. See <button class=\"btn btn-primary btn-sm\" ng-click=vm.siteUtils.showSearchExamples(vm.searchPath)><i class=\"fa fa-search\"></i> search examples</button></p><p class=text-center><a href=http://docs.platformio.org/en/latest/librarymanager/creating.html class=\"btn btn-success\"><i class=\"fa fa-plus\"></i> Create Library</a> <a href=https://github.com/ivankravets/platformio-libmirror/issues class=\"btn btn-default\"><i class=\"fa fa-share-square-o\"></i> Propose Library</a></p></div></div>"
  );


  $templateCache.put('views/lib_main.html',
    "<meta name=description content=\"PlatformIO Library Manager is a missing library manager for embedded platforms (Atmel AVR, Arduino, Energia, MSP430 and ARM from Texas Instruments)\" view-head><meta name=keywords content=\"PlatformIO, libraries, manager, library.json, search, atmel, avr, msp430, arm, ti, arduino, energia\" view-head><div class=jumbotron><div class=container><h1 view-title><i class=\"fa fa-book\"></i> Libraries <small>Registry</small></h1><p><a href=http://docs.platformio.org/en/latest/librarymanager/index.html>PlatformIO Library Manager</a> is the missing library manager which allows you to organize external libraries. You can search for new libraries via <a href=http://docs.platformio.org/en/latest/userguide/lib/cmd_search.html>Command Line Interface</a> or this <i>Web 2.0 Library Search</i>.</p><p>You don't need to bother for finding the latest version of library. Due to <a href=http://docs.platformio.org/en/latest/userguide/lib/cmd_update.html>platformio lib update</a> command you will have up-to-date external libraries.</p></div></div><div class=container><ng-include src=\"'views/lib_search_form.html'\"></ng-include><div class=\"page-header libs-stats\"><div class=row><div class=\"col col-md-6\"><h2>Recently</h2></div><div class=\"col col-md-6 text-right lib-recently-btn\"><a href=\"#!/lib/search?query=\" class=\"btn btn-primary\"><i class=\"fa fa-list\"></i> All Libraries</a> <a href=http://docs.platformio.org/en/latest/librarymanager/creating.html class=\"btn btn-success\"><i class=\"fa fa-plus\"></i> Create Library</a> <a href=https://github.com/ivankravets/platformio-libmirror/issues class=\"btn btn-default\"><i class=\"fa fa-share-square-o\"></i> Propose Library</a></div></div></div><div class=row><div class=\"col col-md-4\"><h3>Updated</h3><p ng-repeat=\"item in vm.stats.updated\"><i class=\"fa fa-refresh\"></i> <a ng-href=\"#!/lib/show/{{ item.id }}/{{ item.name }}\">{{ item.name }}</a> <small tooltip=\"{{ item.date | date:'medium' }}\">{{ item.date | relativeDate }}</small></p></div><div class=\"col col-md-4\"><h3>Added</h3><p ng-repeat=\"item in vm.stats.added\"><i class=\"fa fa-plus\"></i> <a ng-href=\"#!/lib/show/{{ item.id }}/{{ item.name }}\">{{ item.name }}</a> <small tooltip=\"{{ item.date | date:'medium' }}\">{{ item.date | relativeDate }}</small></p></div><div class=\"col col-md-4 keywords-stats\"><h3>Keywords</h3><p ng-repeat=\"keyword in vm.stats.lastkeywords\"><a ng-href=\"#!/lib/search?query=keyword%253A%2522{{ keyword }}%2522\" class=\"btn btn-primary btn-xs\"><i class=\"fa fa-tag fa-lg\"></i> {{ keyword }}</a></p></div></div><div class=page-header><h2>Popular Keywords</h2></div><div class=keywords-stats-top><a ng-repeat=\"keyword in vm.stats.topkeywords\" ng-href=\"#!/lib/search?query=keyword%253A%2522{{ keyword }}%2522\" ng-class=\"{'btn btn-primary': $index <= 15, 'btn btn-primary btn-sm': $index > 15 && $index < 30, 'btn btn-primary btn-xs': $index >= 30}\"><i class=\"fa fa-tag fa-lg\"></i> {{ keyword }}</a></div><div class=\"page-header libs-stats\"><h2>Most Downloaded</h2></div><div class=row><div class=\"col col-md-4\"><h3>Day's</h3><p ng-repeat=\"item in vm.stats.dlday\">{{ item.total }} <i class=\"fa fa-download\"></i> <a ng-href=\"#!/lib/show/{{ item.id }}/{{ item.name }}\">{{ item.name }}</a></p></div><div class=\"col col-md-4\"><h3>Week's</h3><p ng-repeat=\"item in vm.stats.dlweek\">{{ item.total }} <i class=\"fa fa-download\"></i> <a ng-href=\"#!/lib/show/{{ item.id }}/{{ item.name }}\">{{ item.name }}</a></p></div><div class=\"col col-md-4\"><h3>Month's</h3><p ng-repeat=\"item in vm.stats.dlmonth\">{{ item.total }} <i class=\"fa fa-download\"></i> <a ng-href=\"#!/lib/show/{{ item.id }}/{{ item.name }}\">{{ item.name }}</a></p></div></div></div>"
  );


  $templateCache.put('views/lib_search.html',
    "<view-title>{{ vm.searchResult.page > 1 ? 'Page ' + vm.searchResult.page + ' Â·' : '' }} {{ vm.searchQuery ? vm.searchQuery + ' Â·' : '' }} Libraries</view-title><meta name=description content=\"{{ vm.meta.description }}\" view-head><meta name=keywords content=\"{{ vm.meta.keywords }}\" view-head><div class=jumbotron><div class=container><h1><i class=\"fa fa-book\"></i> Libraries <small>Search</small></h1></div></div><div class=container><ng-include src=\"'views/lib_search_form.html'\"></ng-include><hr><div class=\"search-filters text-right\"><div class=btn-group dropdown><button type=button class=\"btn default dropdown-toggle\" dropdown-toggle><i class=\"fa fa-cogs\"></i> Frameworks <span class=caret></span></button><ul class=dropdown-menu role=menu><li><a href=\"\" ng-click=\"vm.searchQuery=''; vm.submitSearchForm()\">All</a></li><li ng-repeat=\"item in vm.frameworks\"><a href=\"\" ng-click=\"vm.searchQuery='framework:{{ item.name }}'; vm.submitSearchForm()\">{{ item.title }}</a></li></ul></div><div class=btn-group dropdown><button type=button class=\"btn default dropdown-toggle\" dropdown-toggle><i class=\"fa fa-laptop\"></i> Platforms <span class=caret></span></button><ul class=dropdown-menu role=menu><li><a href=\"\" ng-click=\"vm.searchQuery=''; vm.submitSearchForm()\">All</a></li><li ng-repeat=\"item in vm.platforms\"><a href=\"\" ng-click=\"vm.searchQuery='platform:{{ item.name }}'; vm.submitSearchForm()\">{{ item.title }}</a></li></ul></div></div><div ng-if=vm.searchResult.items.length><section class=search-result><div class=\"well well-sm\" ng-repeat=\"item in vm.searchResult.items\"><div class=row><div class=col-xs-6><h3 class=title><a ng-href=\"#!/lib/show/{{ item.id }}/{{ item.name }}\">{{ item.name }}</a> <small>by <span ng-repeat=\"name in item.authornames\">{{ name }}<span ng-if=!$last>,&nbsp;</span></span></small></h3></div><div class=\"col-xs-6 text-right\"><span ng-if=item.frameworks.length tooltip=\"Compatible Frameworks\"><i class=\"fa fa-cogs\"></i>&nbsp;<span ng-repeat=\"name in item.frameworks\">{{ name | nameToTitle : vm.frameworks }}<span ng-if=!$last>,&nbsp;</span></span> &nbsp;</span> <span ng-if=item.platforms.length tooltip=\"Compatible Platforms\"><i class=\"fa fa-laptop\"></i>&nbsp;<span ng-repeat=\"name in item.platforms\">{{ name | nameToTitle : vm.platforms }}<span ng-if=!$last>,&nbsp;</span></span> &nbsp;</span> <span tooltip=Examples>{{ item.examplenums }} <i class=\"fa fa-graduation-cap\"></i></span> &nbsp; <span tooltip=\"Downloads per month\">{{ item.dlmonth }} <i class=\"fa fa-download\"></i></span></div></div><p>{{ item.description }}</p><div class=keywords><a ng-href=\"#!/lib/search?query=keyword%253A%2522{{ keyword }}%2522\" class=\"btn btn-primary btn-xs\" ng-repeat=\"keyword in item.keywords\"><i class=\"fa fa-tag fa-lg\"></i> {{ keyword }}</a></div></div></section><div class=text-center><pagination ng-model=vm.searchResult.page total-items=vm.searchResult.total items-per-page=vm.searchResult.perpage max-size=10 boundary-links=true rotate=false ng-change=vm.pageChanged() class=pagination-sm></pagination></div></div><div ng-if=!vm.searchResult.items.length class=jumbotron><h3>Nothing has been found by your request</h3><p>Try a less-specific search or use truncation (or wildcard) operator <code>*</code>. See <button class=\"btn btn-primary btn-sm\" ng-click=vm.siteUtils.showSearchExamples(vm.searchPath)><i class=\"fa fa-search\"></i> search examples</button></p><p class=text-center><a href=http://docs.platformio.org/en/latest/librarymanager/creating.html class=\"btn btn-success\"><i class=\"fa fa-plus\"></i> Create Library</a> <a href=https://github.com/ivankravets/platformio-libmirror/issues class=\"btn btn-default\"><i class=\"fa fa-share-square-o\"></i> Propose Library</a></p></div></div>"
  );


  $templateCache.put('views/lib_search_examples.html',
    "<div class=modal-search-examples><div class=row><div class=col-md-8><h4>Syntax & Examples</h4></div><div class=\"col-md-4 text-right\"><a href=http://docs.platformio.org/en/latest/userguide/lib/cmd_search.html#description class=\"btn btn-primary\" target=_blank><i class=\"fa fa-search\"></i> Advanced search syntax</a></div></div><table class=\"table table-hover table-striped\"><thead><tr><th>Search</th><th>Shows<tr><td><button ng-click=\"vm.search('ds18*')\" class=\"btn btn-default btn-xs\"><i class=\"fa fa-search\"></i> DS18*</button> <button ng-click=\"vm.search('pca*')\" class=\"btn btn-default btn-xs\"><i class=\"fa fa-search\"></i> PCA*</button> <button ng-click=\"vm.search('dht*')\" class=\"btn btn-default btn-xs\"><i class=\"fa fa-search\"></i> DHT*</button> <button ng-click=\"vm.search('sht*')\" class=\"btn btn-default btn-xs\"><i class=\"fa fa-search\"></i> SHT*</button></td><td><u>The asterisk</u> <code>*</code> serves as the truncation (or wildcard) operator.<br>If you don't know the full name of library or chip, then use the first 2-3 letters and <code>*</code> operator.<tr><td><button ng-click=\"vm.search('framework%253Aarduino%2520i2c')\" class=\"btn btn-default btn-xs\"><i class=\"fa fa-search\"></i> framework:arduino i2c</button></td><td>Arduino-based <code>I<sup>2</sup>C/TWI</code> libraries<tr><td><button ng-click=\"vm.search('keyword%253Aweb%2520keyword%253Ahttp')\" class=\"btn btn-default btn-xs\"><i class=\"fa fa-search\"></i> keyword:web keyword:http</button></td><td>Filter by <code>web</code> and <code>http</code> keywords.<tr><td><button ng-click=\"vm.search('sensor%2520-temperature')\" class=\"btn btn-default btn-xs\"><i class=\"fa fa-search\"></i> sensor -temperature</button></td><td>The all sensor libraries excluding temperature (<code>-</code> operator)<tr><td><button ng-click=\"vm.search('author%253A%2522Adafruit%20Industries%2522')\" class=\"btn btn-default btn-xs\"><i class=\"fa fa-search\"></i> author:\"Adafruit Industries\"</button></td><td>Libraries by <code>Adafruit Industries</code> author<tr><td><button ng-click=\"vm.search('platform%253Ateensy')\" class=\"btn btn-default btn-xs\"><i class=\"fa fa-search\"></i> platform:teensy</button></td><td>Libraries for the <code>Teensy</code> platform<tr><td><button ng-click=\"vm.search('framework%253Aenergia%2520%252B(nRF24%2520HttpClient)')\" class=\"btn btn-default btn-xs\"><i class=\"fa fa-search\"></i> framework:energia +(nRF24 HttpClient)</button></td><td>Energia-based <code>nRF24</code> or <code>HttpClient</code> libraries. The search query can be interpreted like <code>energia nRF24 OR energia HttpClient</code></td></tr></td></tr></td></tr></td></tr></td></tr></td></tr></td></tr></th></tr></thead></table></div>"
  );


  $templateCache.put('views/lib_search_form.html',
    "<form ng-submit=vm.submitSearchForm() novalidate role=search><div class=\"input-group input-group-lg\"><input type=search class=form-control placeholder=\"{{ vm.searchInputPlaceholder }}\" name=query ng-model=vm.searchQuery><div class=input-group-btn><button type=submit class=\"btn btn-default\" type=submit><i class=\"fa fa-search\"></i></button></div></div></form><div class=\"row search-examples\"><div class=\"col col-xs-10\">Examples: <a href=\"{{ vm.searchPath }}?query=tft%2520display\" class=\"btn btn-default btn-xs\" tooltip=\"Search in 'library.json' fields\"><i class=\"fa fa-search\"></i> tft display</a> <a href=\"{{ vm.searchPath }}?query=ds18*\" class=\"btn btn-default btn-xs\" tooltip=\"Search for libraries which are compatible with Dallas Temperature ICs (DS18B20, DS18S20, DS1822, DS1820)\"><i class=\"fa fa-search\"></i> DS18*</a> <a href=\"{{ vm.searchPath }}?query=framework%253Aarduino%2520web\" class=\"btn btn-default btn-xs\" tooltip=\"Arduino-based libraries for Web\"><i class=\"fa fa-search\"></i> framework:arduino web</a> <a href=\"{{ vm.searchPath }}?query=platform%253Atimsp430\" class=\"btn btn-default btn-xs\" tooltip=\"Search for TI MSP430 compatible libraries\"><i class=\"fa fa-search\"></i> platform:timsp430</a> <a href=\"{{ vm.searchPath }}?query=keyword%253Asensor\" class=\"btn btn-default btn-xs\" tooltip=\"Filter libraries by keyword\"><i class=\"fa fa-search\"></i> keyword:sensor</a> <a href=\"{{ vm.searchPath }}?query=author%253A%2522Adafruit%2520Industries%2522\" class=\"btn btn-default btn-xs\" tooltip=\"Filter by author\"><i class=\"fa fa-search\"></i> author:\"Adafruit Industries\"</a></div><div class=\"col col-xs-2 text-right\"><a href=http://docs.platformio.org/en/latest/userguide/lib/cmd_search.html#description target=_blank>advanced search syntax</a></div></div>"
  );


  $templateCache.put('views/lib_show.html',
    "<view-title>{{ vm.meta.title }} Â· Libraries</view-title><meta name=description content=\"{{ vm.meta.description }}\" view-head><meta name=keywords content=\"{{ vm.meta.keywords }}\" view-head><div class=jumbotron><div class=container><h1>{{ vm.lib.name }} <small>by <span ng-repeat=\"author in vm.lib.authors\">{{ author.name }}<span ng-if=!$last>,&nbsp;</span></span></small></h1><p>{{ vm.lib.description }}</p><div addthis-lib class=\"addthis_toolbox addthis_default_style addthis_32x32_style\" data-lib=vm.lib><a class=addthis_button_twitter></a> <a class=addthis_button_linkedin></a> <a class=addthis_button_facebook></a> <a class=addthis_button_google_plusone_share></a> <a class=addthis_button_compact></a></div></div></div><div class=container><article><div class=\"well well-sm\"><dl class=\"dl-horizontal libinfo\"><dt>Authors<dd><div ng-repeat=\"author in vm.lib.authors\" ng-class=\"{'author-detail': !$first}\"><strong>{{ author.name }}</strong><span ng-if=author.maintainer>(maintainer)</span><br><div ng-if=author.email><i class=\"fa fa-envelope\"></i> <a href=\"mailto:{{ author.email }}\">{{ author.email }}</a></div><div ng-if=author.url><i class=\"fa fa-globe\"></i> <a href=\"{{ author.url }}\" target=_blank>{{ author.url }}</a></div><i class=\"fa fa-book\"></i> <a ng-href=\"#!/lib/search?query=author%253A%2522{{ author.name }}%2522\">Libraries</a></div><dt>Compatibility<dd><span ng-if=vm.lib.frameworks.length tooltip=\"Compatible Frameworks\"><i class=\"fa fa-cogs\"></i>&nbsp;<span ng-repeat=\"name in vm.lib.frameworks\">{{ name | nameToTitle : vm.frameworks }}<span ng-if=!$last>,&nbsp;</span></span><br></span> <span ng-if=vm.lib.platforms.length tooltip=\"Compatible Platforms\"><i class=\"fa fa-laptop\"></i>&nbsp;<span ng-repeat=\"name in vm.lib.platforms\">{{ name | nameToTitle : vm.platforms }}<span ng-if=!$last>,&nbsp;</span></span></span><dt>Downloads<dd>{{ vm.lib.dlstats.day }} downloads in the last day<br>{{ vm.lib.dlstats.week }} downloads in the last week<br>{{ vm.lib.dlstats.month }} downloads in the last month<dt>Version<dd><strong>{{ vm.lib.version.name}}</strong> <small tooltip=\"{{ vm.lib.version.released | date:'medium' }}\">last updated {{ vm.lib.version.released | relativeDate }}</small><dt>Keywords<dd><div class=keywords><a ng-href=\"#!/lib/search?query=keyword%253A%2522{{ keyword }}%2522\" class=\"btn btn-primary btn-sm\" ng-repeat=\"keyword in vm.lib.keywords\"><i class=\"fa fa-tag fa-lg\"></i> {{ keyword }}</a></div></dd></dt></dd></dt></dd></dt></dd></dt></dd></dt></dl></div><h2>Installation <small>using <a href=http://docs.platformio.org/en/latest/userguide/lib/cmd_install.html>PlatformIO Library Manager</a></small></h2><div class=\"row lib-installation\"><div class=\"col-md-11 lib-install\"><div class=\"well terminal\"><i class=\"fa fa-terminal fa-lg\"></i> platformio <font color=silver>lib install</font> <span class=plri tooltip=\"PlatformIO Library Registry ID\">{{ vm.lib.id }}</span></div></div><div class=\"col-md-1 lib-dl\"><button type=button class=\"btn btn-success\" tooltip=\"Download Tar.Gz\" ng-click=vm.downloadLib()><i class=\"fa fa-download fa-2x\"></i></button></div></div><div class=\"alert alert-info\" role=alert><ul class=fa-ul><li><i class=\"fa fa-info-circle fa-lg fa-li\"></i> Don't forget that you can <a href=http://docs.platformio.org/en/latest/ide.html# class=alert-link>Integrate PlatformIO with your favourite IDE</a> (Arduino, Energia, Eclipse, VIM and etc.).</li></ul></div></article><tabset><tab><tab-heading><i class=\"fa fa-graduation-cap\"></i> Examples</tab-heading><div ng-if=!vm.examples.length class=\"alert alert-warning\" role=alert>The library doesn't have any examples.</div><div ng-if=vm.examples.length><p><div class=text-center><div class=btn-group><label class=\"btn btn-default btn-sm\" ng-model=vm.currentExample btn-radio=item ng-repeat=\"item in vm.examples\">{{ item.name }}</label></div></div></p><div hljs include=vm.currentExample.url language=cpp></div></div></tab><tab><tab-heading><i class=\"fa fa-comments\"></i> Discussion</tab-heading><div disqus=vm.lib.id></div></tab></tabset></div>"
  );


  $templateCache.put('views/platforms.html',
    "<view-title>{{ vm.platforms[vm.activePlatform].title }} Â· Development Platforms</view-title><meta name=description content=\"{{ vm.platforms[vm.activePlatform].title }} pre-built development platform\" view-head><meta name=keywords content=\"embedded, platform, atmel, avr, msp430, arduino, energia\" view-head><div class=jumbotron><div class=container><h1><i class=\"fa fa-laptop\"></i> Development Platforms</h1><p><b>PlatformIO</b> has pre-built different development platforms for popular <i>OS</i>: <i class=\"fa fa-apple\"></i> <i>Mac</i>, <i class=\"fa fa-linux\"></i> <i>Linux <small>(+ARMv6)</small></i> and <i class=\"fa fa-windows\"></i> <i>Windows</i>.</p><p>Each of them include <u>compiler</u>, <u>debugger</u>, <u>uploader</u> (for embedded) and many other useful tools.</p></div></div><div class=container><tabset><tab active=vm.platforms.atmelavr.active><tab-heading><a href=#!/platforms/atmelavr ng-click=\"vm.changePlatform('atmelavr')\"><h2>Atmel AVR</h2></a></tab-heading><span class=\"label label-default\">Terminal</span><div class=\"well terminal\"><span class=cmd><i class=\"fa fa-terminal fa-lg\"></i> platformio install atmelavr</span></div><p class=lead><a href=http://www.atmel.com/products/microcontrollers/avr/default.aspx target=_blank>Atmel AVRÂ® 8- and 32-bit MCUs</a> deliver a unique combination of performance, power efficiency and design flexibility. Optimized to speed time to marketâand easily adapt to new onesâthey are based on the industry's most code-efficient architecture for C and assembly programming.</p><h2>Packages</h2><table class=\"table table-striped\"><thead><tr><th>Name</th><th>Alias</th><th>Contents<thead><tr><td><span class=\"label label-default\">toolchain-atmelavr</span></td><td>toolchain</td><td><a href=https://gcc.gnu.org/wiki/avr-gcc target=_blank>avr-gcc</a>, <a href=\"http://www.gnu.org/software/gdb/\" target=_blank>GDB</a>, <a href=http://avarice.sourceforge.net target=_blank>AVaRICE</a>, <a href=\"http://www.nongnu.org/simulavr/\" target=_blank>SimulAVR</a><tr><td><span class=\"label label-default\">tool-avrdude</span></td><td>uploader</td><td><a href=\"http://www.nongnu.org/avrdude/\" target=_blank>AVRDUDE</a><tr><td><span class=\"label label-default\">framework-arduinoavr</span></td><td></td><td><a href=http://arduino.cc/en/Reference/HomePage target=_blank>Arduino Wiring-based Framework (AVR Core, 1.5.x branch)</a></td></tr></td></tr></td></tr></thead></th></tr></thead></table></tab><tab active=vm.platforms.timsp430.active><tab-heading><a href=#!/platforms/timsp430 ng-click=\"vm.changePlatform('timsp430')\"><h2>TI MSP430</h2></a></tab-heading><span class=\"label label-default\">Terminal</span><div class=\"well terminal\"><span class=cmd><i class=\"fa fa-terminal fa-lg\"></i> platformio install timsp430</span></div><p class=lead><a href=http://www.ti.com/lsds/ti/microcontrollers_16-bit_32-bit/msp/overview.page target=_blank>MSP430 microcontrollers (MCUs) from Texas Instruments (TI)</a> are 16-bit, RISC-based, mixed-signal processors designed for ultra-low power. These MCUs offer the lowest power consumption and the perfect mix of integrated peripherals for thousands of applications.</p><h2>Packages</h2><table class=\"table table-striped\"><thead><tr><th>Name</th><th>Alias</th><th>Contents<thead><tr><td><span class=\"label label-default\">toolchain-timsp430</span></td><td>toolchain</td><td><a href=\"http://sourceforge.net/projects/mspgcc/\" target=_blank>msp-gcc</a>, <a href=\"http://www.gnu.org/software/gdb/\" target=_blank>GDB</a><tr><td><span class=\"label label-default\">tool-mspdebug</span></td><td>uploader</td><td><a href=\"http://www.http://mspdebug.sourceforge.net/\" target=_blank>MSPDebug</a><tr><td><span class=\"label label-default\">framework-energiamsp430</span></td><td></td><td><a href=\"http://energia.nu/reference/\" target=_blank>Energia Wiring-based Framework (MSP430 Core)</a></td></tr></td></tr></td></tr></thead></th></tr></thead></table></tab><tab active=vm.platforms.titiva.active><tab-heading><a href=#!/platforms/titiva ng-click=\"vm.changePlatform('titiva')\"><h2>TI Tiva</h2></a></tab-heading><span class=\"label label-default\">Terminal</span><div class=\"well terminal\"><span class=cmd><i class=\"fa fa-terminal fa-lg\"></i> platformio install titiva</span></div><p class=lead><a href=http://www.ti.com/lsds/ti/microcontrollers_16-bit_32-bit/c2000_performance/control_automation/tm4c12x/overview.page target=_blank>Texas Instruments TM4C12x MCUs</a> offer the industryâs most popular ARMÂ® CortexÂ®-M4 core with scalable memory and package options, unparalleled connectivity peripherals, advanced application functions, industry-leading analog integration, and extensive software solutions.</p><h2>Packages</h2><table class=\"table table-striped\"><thead><tr><th>Name</th><th>Alias</th><th>Contents<thead><tr><td><span class=\"label label-default\">toolchain-gccarmnoneeabi</span></td><td>toolchain</td><td><a href=\"https://launchpad.net/gcc-arm-embedded/\" target=_blank>gcc-arm-embedded</a>, <a href=\"http://www.gnu.org/software/gdb/\" target=_blank>GDB</a><tr><td><span class=\"label label-default\">tool-lm4flash</span></td><td>uploader</td><td><a href=http://www.ti.com/tool/lmflashprogrammer target=_blank>Flash Programmer</a><tr><td><span class=\"label label-default\">framework-energiativa</span></td><td></td><td><a href=\"http://energia.nu/reference/\" target=_blank>Energia Wiring-based Framework (LM4F Core)</a></td></tr></td></tr></td></tr></thead></th></tr></thead></table></tab><tab active=vm.platforms.creating.active><tab-heading><a href=#!/platforms/creating ng-click=\"vm.changePlatform('creating')\"><h2><i class=\"fa fa-plus\"></i> Create Platform</h2></a></tab-heading><br><p class=lead><b>PlatformIO</b> was developed like a tool which would build the same source code for the different development platforms via single command <a href=http://docs.platformio.org/en/latest/userguide/cmd_run.html><i class=\"fa fa-terminal fa-lg\"></i> platformio run</a> without any dependent software or requirements.</p><p>For this purpose <i>PlatformIO</i> uses own pre-configured platforms data: build scripts, tool chains, the settings for the most popular embedded boards and etc. These data are pre-built and packaged to the different \"packages\".</p><p>It allows <i>PlatformIO</i> to have multiple development platforms which can use the same packages(tool chains, frameworks), but have different/own build scripts, uploader and etc.</p><p class=text-center><a href=http://docs.platformio.org/en/latest/platforms/creating_platform.html class=\"btn btn-success\" role=button analytics-on analytics-event=Click analytics-category=Button analytics-label=\"Create Platform\" target=_blank><i class=\"fa fa-plus fa-lg\"></i> Create Platform</a></p></tab></tabset><div class=\"alert alert-info\" ng-if=!vm.platforms.creating.active><ul class=fa-ul><li><i class=\"fa fa-info-circle fa-lg fa-li\"></i> For more detailed information about the <em>Platforms</em> please go to the <a href=http://docs.platformio.org/en/latest/platforms/index.html class=alert-link>Documentation</a>.</li></ul></div></div>"
  );


  $templateCache.put('views/who_uses.html',
    "<view-title>Who uses</view-title><meta name=description content=\"This is just a short list of companies and projects that use PlatformIO\" view-head><meta name=keywords content=\"PlatformIO, using, companies, projects\" view-head><div class=jumbotron><div class=container><h1><i class=\"fa fa-heart-o\"></i> Who uses PlatformIO</h1><p>This is just a short list of companies and projects that use <i>PlatformIO</i>.<br></p><p>If you've used <i>PlatformIO</i> in a project and would like it listed on this page, <a href=https://github.com/ivankravets/platformio-web/blob/develop/app/views/who_uses.html target=_blank>please edit this page</a>.</p></div></div><div class=container><h2><a href=http://smartanthill.org target=_blank>SmartAnthill</a> <small>PlatformIO Team</small></h2><p><b>SmartAnthill</b> is an intelligent micro-oriented networking system. It opens the door for people that are not familiar with electronics and micro-controller programming, but earlier had dream to use it.</p><p>The main goal of <i>SmartAnthill</i> is to destroy the wall between usual user and hardware world. Thanks to this system we can combine the independent micro-devices or micro-based networks into general <a href=http://docs.smartanthill.org/en/latest/specification/network/index.html target=_blank>SmartAnthill Network</a>.</p><hr><h2><a href=https://www.touchdevelop.com/app/beta#list:topics:topic:gettingstartedwitharduino:overview target=_blank>TouchDevelop</a> <small>Microsoft Research</small></h2><p><b>TouchDevelop</b> combines a cross-platform browser-based <i>IDE</i> for the creation of mobile+cloud apps, an online programmer/user community, and an app store.</p><p><i>TouchDevelop</i> makes learning programming exciting! You can write code directly on any device and you can directly use sensors and media via high-level <i>APIs</i>. It's easy to create games and apps, publish them or tweak those published by others. You write code in our touch-friendly editor where you compose programs by tapping on your screen, yet concepts you learn transfer to traditional languages such as <i>Java</i>, <i>C#</i> or <i>Arduino</i>.</p><p><i>TouchDevelop</i> embraces the \"Bring Your Own Device\" revolution by providing a unified programming environment everywhere.</p><hr><h2><a href=http://www.he-arc.ch target=_blank>Haute Ecole Arc</a> <small>University of Applied Sciences and Arts Western Switzerland</small></h2><p><b>The University of Applied Sciences and Arts of Western Switzerland</b> encompasses 5 campuses providing teaching and applied R&D in the fields of Engineering, Management, Health Sciences and Arts.<ul><li>A System Development tool (including a cross-vendor common language and easy trajectory generation) for deployment of industrial robots, particularly for micro-assembly and micro-machining tasks.</li><li>Development of Industrial Vision systems (2D and 3D) applied to online quality control (dimensional and aesthetic) and robot guidance.</li><li>Design and multi-physics simulation of precision micro-engineering devices and actuators.</li><li>Intuitive robot configuration through domain-specific graphic user interfaces and vision-based imitation.</li></ul></p><hr><h2><a href=\"http://embrio.io/download/\" target=_blank>Embrio</a></h2><p><b>Embrio</b> is a new visual programming architecture for embedded software, now available for use with <i>Arduino</i> on <i>Windows</i>.</p><ul><li>No Coding Necessary</li><li>Parallel / Agent Based Architecture</li></ul><hr><h2><a href=http://www.bitwizard.nl/wiki/index.php/Raspduino#Using_PlatformIO target=_blank>Raspduino</a> <small>BitWizard</small></h2><p><b>Raspduino</b> is an <i>Arduino</i> compatible microcontroller board, designed to plug on top of a <i>Raspberry Pi</i> (some people like to call this a Pi Plate). It is then possible to add <i>Arduino</i> shields to the <i>Raspduino</i>.</p><p>The <i>Raspduino</i> is powered by a <i>ATmega328</i> microcontroller, and can be programmed with the regular <i>Arduino</i> software. The <i>Raspduino</i> can communicate with the <i>Raspberry Pi</i> via the serial port or <i>I2C</i> port on the <i>GPIO</i> connector. Programming can also be done over the <i>GPIO</i> connector.</p></div>"
  );

}]);
